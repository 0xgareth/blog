{"version":3,"sources":["webpack:///./src/templates/books.js"],"names":["BlogPostTemplate","data","pageContext","location","post","markdownRemark","siteTitle","site","siteMetadata","title","previous","next","genre","String","frontmatter","formattedGenre","slice","toUpperCase","length","description","excerpt","style","marginTop","rhythm","marginBottom","scale","display","date","rating","published","dangerouslySetInnerHTML","__html","html","flexWrap","justifyContent","listStyle","padding","to","fields","slug","rel","pageQuery"],"mappings":"4OA8GeA,UAtGU,SAAC,GAAqC,IAAnCC,EAAkC,EAAlCA,KAAMC,EAA4B,EAA5BA,YAAaC,EAAe,EAAfA,SACvCC,EAAOH,EAAKI,eACZC,EAAYL,EAAKM,KAAKC,aAAaC,MACjCC,EAAmBR,EAAnBQ,SAAUC,EAAST,EAATS,KACZC,EAAQC,OAAOT,EAAKU,YAAYF,OAChCG,EAAiBH,EAAMI,MAAM,EAAE,GAAGC,cAAgBL,EAAMI,MAAM,EAAGJ,EAAMM,QAG7E,OACE,kBAAC,IAAD,CAAQf,SAAUA,EAAUM,MAAOH,GACjC,kBAAC,IAAD,CACEG,MAAOL,EAAKU,YAAYL,MACxBU,YAAaf,EAAKU,YAAYK,aAAef,EAAKgB,UAEpD,iCACE,gCACE,wBACEC,MAAO,CACLC,UAAWC,YAAO,GAClBC,aAAc,IAGfpB,EAAKU,YAAYL,OAEpB,2BACEY,MAAK,iBACAI,aAAM,IADN,CAEHC,QAAQ,QACRF,aAAcD,YAAO,QAJzB,SAOSnB,EAAKU,YAAYa,MAE1B,2BACEN,MAAK,iBACAI,aAAM,IADN,CAEHC,QAAQ,QACRF,aAAcD,YAAO,QAJzB,WAOWnB,EAAKU,YAAYc,OAP5B,OASA,2BACEP,MAAK,iBACAI,aAAM,IADN,CAEHC,QAAQ,QACRF,aAAcD,YAAO,QAJzB,mBAOmBnB,EAAKU,YAAYe,WAEpC,2BACER,MAAK,iBACAI,aAAM,IADN,CAEHC,QAAQ,QACRF,aAAcD,YAAO,MAJzB,UAOUR,IAGZ,6BAASe,wBAAyB,CAAEC,OAAQ3B,EAAK4B,QACjD,wBACEX,MAAO,CACLG,aAAcD,YAAO,MAGzB,gCACE,kBAAC,IAAD,CAAKpB,SAAUA,MAInB,6BACE,wBACEkB,MAAO,CACLK,QAAQ,OACRO,SAAS,OACTC,eAAe,gBACfC,UAAU,OACVC,QAAS,IAGX,4BACG1B,GACC,kBAAC,OAAD,CAAM2B,GAAI3B,EAAS4B,OAAOC,KAAMC,IAAI,QAApC,KACK9B,EAASI,YAAYL,QAI9B,4BACGE,GACC,kBAAC,OAAD,CAAM0B,GAAI1B,EAAK2B,OAAOC,KAAMC,IAAI,QAC7B7B,EAAKG,YAAYL,MADpB,WAaP,IAAMgC,EAAS","file":"component---src-templates-books-js-6313bf99b18984dff494.js","sourcesContent":["import React from \"react\"\nimport { Link, graphql } from \"gatsby\"\n\nimport Bio from \"../components/bio\"\nimport Layout from \"../components/layout\"\nimport SEO from \"../components/seo\"\nimport { rhythm, scale } from \"../utils/typography\"\n\nconst BlogPostTemplate = ({ data, pageContext, location }) => {\n  const post = data.markdownRemark\n  const siteTitle = data.site.siteMetadata.title\n  const { previous, next } = pageContext\n  const genre = String(post.frontmatter.genre)\n  const formattedGenre = genre.slice(0,1).toUpperCase() + genre.slice(1, genre.length)\n\n\n  return (\n    <Layout location={location} title={siteTitle}>\n      <SEO\n        title={post.frontmatter.title}\n        description={post.frontmatter.description || post.excerpt}\n      />\n      <article>\n        <header>\n          <h2\n            style={{\n              marginTop: rhythm(1),\n              marginBottom: 0,\n            }}\n          >\n            {post.frontmatter.title}\n          </h2>\n          <small\n            style={{\n              ...scale(-1 / 5),\n              display: `block`,\n              marginBottom: rhythm(0.01),\n            }}\n          >\n            Date: {post.frontmatter.date}\n          </small>\n          <small\n            style={{\n              ...scale(-1 / 5),\n              display: `block`,\n              marginBottom: rhythm(0.01),\n            }}\n          >\n            Rating: {post.frontmatter.rating}/10\n          </small>\n          <small\n            style={{\n              ...scale(-1 / 5),\n              display: `block`,\n              marginBottom: rhythm(0.01),\n            }}\n          >\n            Date published: {post.frontmatter.published}\n          </small>\n          <small\n            style={{\n              ...scale(-1 / 5),\n              display: `block`,\n              marginBottom: rhythm(1),\n            }}\n          >\n            Genre: {formattedGenre}\n          </small>\n        </header>\n        <section dangerouslySetInnerHTML={{ __html: post.html }} />\n        <hr\n          style={{\n            marginBottom: rhythm(1),\n          }}\n        />\n        <footer>\n          <Bio location={location}/>\n        </footer>\n      </article>\n\n      <nav>\n        <ul\n          style={{\n            display: `flex`,\n            flexWrap: `wrap`,\n            justifyContent: `space-between`,\n            listStyle: `none`,\n            padding: 0,\n          }}\n        >\n          <li>\n            {previous && (\n              <Link to={previous.fields.slug} rel=\"prev\">\n                ← {previous.frontmatter.title}\n              </Link>\n            )}\n          </li>\n          <li>\n            {next && (\n              <Link to={next.fields.slug} rel=\"next\">\n                {next.frontmatter.title} →\n              </Link>\n            )}\n          </li>\n        </ul>\n      </nav>\n    </Layout>\n  )\n}\n\nexport default BlogPostTemplate\n\nexport const pageQuery = graphql`\n  query BookPostBySlug($slug: String!) {\n    site {\n      siteMetadata {\n        title\n      }\n    }\n    markdownRemark(fields: { slug: { eq: $slug } }) {\n      id\n      excerpt(pruneLength: 160)\n      html\n      frontmatter {\n        title\n        date(formatString: \"MMMM DD, YYYY\")\n        description\n        minread\n        rating\n        genre\n        published(formatString: \"MMMM DD, YYYY\")\n      }\n    }\n  }\n`\n"],"sourceRoot":""}