{"version":3,"sources":["webpack:///./node_modules/core-js/modules/es7.object.entries.js","webpack:///./src/pages/posts.js","webpack:///./node_modules/core-js/modules/_object-to-array.js"],"names":["$export","$entries","S","entries","it","BlogIndex","data","location","tagPostData","siteTitle","site","siteMetadata","title","posts","allMarkdownRemark","edges","tags","forEach","post","_","node","frontmatter","concat","filter","elem","pos","arr","indexOf","tag","res","includes","push","getPostsWithTag","style","display","flexWrap","justifyContent","listStyle","padding","boxShadow","to","Object","keys","map","path","toLowerCase","key","fields","slug","date","role","aria-label","minread","pageQuery","DESCRIPTORS","getKeys","toIObject","isEnum","f","module","exports","isEntries","O","length","i","result","call"],"mappings":"gFACA,IAAIA,EAAU,EAAQ,QAClBC,EAAW,EAAQ,OAAR,EAA8B,GAE7CD,EAAQA,EAAQE,EAAG,SAAU,CAC3BC,QAAS,SAAiBC,GACxB,OAAOH,EAASG,O,4OC6FLC,UA5FG,SAAC,GAAwB,IAAtBC,EAAqB,EAArBA,KAAMC,EAAe,EAAfA,SACrBC,EAAc,GACZC,EAAYH,EAAKI,KAAKC,aAAaC,MACnCC,EAAYP,EAAKQ,kBAAkBC,MAGrCC,EAAO,GACXH,EAAMI,SAAQ,SAACC,EAAMC,GACfD,EAAKE,KAAKC,YAAYL,OACxBA,EAAOA,EAAKM,OAAOJ,EAAKE,KAAKC,YAAYL,UAU7CA,EAAiBA,EALDO,QAAO,SAACC,EAAMC,EAAKC,GAC/B,OAAOA,EAAIC,QAAQH,KAAUC,KAqBjC,OAJAT,EAAKC,SAAQ,SAAAW,GACXpB,EAAYoB,GAZU,SAACf,EAAOe,GAC9B,IAAIC,EAAM,GAMV,OALAhB,EAAMI,SAAQ,SAACC,EAAMC,GACfD,EAAKE,KAAKC,YAAYL,KAAKc,SAASF,IACtCC,EAAIE,KAAKb,MAGNW,EAKYG,CAAgBnB,EAAOe,MAI1C,kBAAC,IAAD,CAAQrB,SAAUA,EAAUK,MAAOH,GACjC,kBAAC,IAAD,CAAKG,MAAM,cACX,kBAAC,IAAD,CAAKL,SAAUA,IAGf,yBACE0B,MAAO,CACLC,QAAQ,OACRC,SAAS,OACTC,eAAe,gBACfC,UAAU,OACVC,QAAS,IAEX,kBAAC,OAAD,CAAML,MAAO,CAAEM,UAAU,QAAWC,GAAI,kBAAxC,iBAGCC,OAAOC,KAAKlC,GAAamC,KAAI,SAACf,GAC7B,IAAMgB,EAAOhB,EAAIiB,cACjB,OACE,kBAAC,OAAD,CAAMZ,MAAO,CAAEM,UAAU,QAAWC,GAAE,SAAWI,GAC/ChB,OAKR,4BAECa,OAAOtC,QAAQK,GAAamC,KAAI,YAAkB,IAAhBG,EAAe,KAC1CjC,EAD0C,KAC5B8B,KAAI,YAAe,IAAZvB,EAAW,EAAXA,KACnBR,EAAQQ,EAAKC,YAAYT,OAASQ,EAAK2B,OAAOC,KAC9CA,EAAQ5B,EAAK2B,OAAOC,KAC1B,OACE,wBAAIF,IAAKE,GACP,kBAAC,OAAD,CAAMR,GAAIQ,GAAOpC,GACjB,6BACA,+BAAQQ,EAAKC,YAAY4B,KAAzB,MAAiC,0BAAMC,KAAK,MAAMC,aAAW,UAA5B,KAAjC,IAAgF/B,EAAKC,YAAY+B,QAAjG,iBAIJ,OACE,6BACE,wBACEnB,MAAO,IAENa,GAEFjC,SAWR,IAAMwC,EAAS,c,qBCrGtB,IAAIC,EAAc,EAAQ,QACtBC,EAAU,EAAQ,QAClBC,EAAY,EAAQ,QACpBC,EAAS,EAAQ,QAAiBC,EACtCC,EAAOC,QAAU,SAAUC,GACzB,OAAO,SAAUzD,GAOf,IANA,IAKI0C,EALAgB,EAAIN,EAAUpD,GACdsC,EAAOa,EAAQO,GACfC,EAASrB,EAAKqB,OACdC,EAAI,EACJC,EAAS,GAENF,EAASC,GACdlB,EAAMJ,EAAKsB,KACNV,IAAeG,EAAOS,KAAKJ,EAAGhB,IACjCmB,EAAOlC,KAAK8B,EAAY,CAACf,EAAKgB,EAAEhB,IAAQgB,EAAEhB,IAG9C,OAAOmB","file":"component---src-pages-posts-js-6505c37dd9451a5b9bc4.js","sourcesContent":["// https://github.com/tc39/proposal-object-values-entries\nvar $export = require('./_export');\nvar $entries = require('./_object-to-array')(true);\n\n$export($export.S, 'Object', {\n  entries: function entries(it) {\n    return $entries(it);\n  }\n});\n","import React from \"react\"\nimport { Link, graphql } from \"gatsby\"\nimport Layout from \"../components/layout\"\nimport Bio from \"../components/bio\"\nimport SEO from \"../components/seo\"\nimport { rhythm } from \"../utils/typography\"\n\nconst BlogIndex = ({ data, location }) => {\n  let tagPostData = {}\n  const siteTitle = data.site.siteMetadata.title\n  const posts     = data.allMarkdownRemark.edges\n  \n  // get all unique tags from each post\n  let tags = []\n  posts.forEach((post, _) => {\n    if (post.node.frontmatter.tags) {\n      tags = tags.concat(post.node.frontmatter.tags)\n    }\n  })\n\n  const getUnique = arrArg => {\n    return arrArg.filter((elem, pos, arr) => {\n      return arr.indexOf(elem) === pos\n    })\n  }\n\n  tags = getUnique(tags)\n\n  const getPostsWithTag = (posts, tag) => {\n    let res = []\n    posts.forEach((post, _)=> {\n      if (post.node.frontmatter.tags.includes(tag)) {\n        res.push(post)\n      }\n    })\n    return res;\n  }\n\n  // build a data structure to hold tags : posts\n  tags.forEach(tag => {\n    tagPostData[tag] = getPostsWithTag(posts, tag);\n  })\n\n  return (\n    <Layout location={location} title={siteTitle}>\n      <SEO title=\"All posts\" />\n      <Bio location={location}/>\n      \n      {/* links */}\n      <div \n        style={{ \n          display: `flex`,\n          flexWrap: `wrap`,\n          justifyContent: `space-between`,\n          listStyle: `none`,\n          padding: 0,\n        }}>\n        <Link style={{ boxShadow: `none` }} to={'/posts-by-date'}>\n         Posts by date\n        </Link>\n        {Object.keys(tagPostData).map((tag) => {\n          const path = tag.toLowerCase()\n          return( \n            <Link style={{ boxShadow: `none` }} to={`/tags/${path}`}>\n             {tag}\n            </Link>\n          )\n        })}\n      </div>\n      <ul>\n      {/* posts */}\n      {Object.entries(tagPostData).map(([key, value]) =>{\n        const posts = value.map(({ node }) => {\n          const title = node.frontmatter.title || node.fields.slug\n          const slug =  node.fields.slug\n          return (\n            <li key={slug}>\n              <Link to={slug}>{title}</Link>\n              <br/>\n              <small>{node.frontmatter.date} • <span role=\"img\" aria-label=\"coffee\">☕</span> {node.frontmatter.minread} min read</small>\n            </li>\n          )\n          })\n          return (\n            <div>\n              <h3\n                style={{}}\n              >\n                {key}\n              </h3>\n              {posts}\n            </div>\n          )\n      })}\n      </ul>\n    </Layout>\n  )\n}\n\nexport default BlogIndex\n\nexport const pageQuery = graphql`\n  query {\n    site {\n      siteMetadata {\n        title\n      }\n    }\n    allMarkdownRemark(sort: { fields: [frontmatter___date], order: DESC }) {\n      edges {\n        node {\n          excerpt\n          fields {\n            slug\n          }\n          frontmatter {\n            date(formatString: \"MMMM DD, YYYY\")\n            title\n            description\n            minread\n            tags\n          }\n        }\n      }\n    }\n  }\n`\n","var DESCRIPTORS = require('./_descriptors');\nvar getKeys = require('./_object-keys');\nvar toIObject = require('./_to-iobject');\nvar isEnum = require('./_object-pie').f;\nmodule.exports = function (isEntries) {\n  return function (it) {\n    var O = toIObject(it);\n    var keys = getKeys(O);\n    var length = keys.length;\n    var i = 0;\n    var result = [];\n    var key;\n    while (length > i) {\n      key = keys[i++];\n      if (!DESCRIPTORS || isEnum.call(O, key)) {\n        result.push(isEntries ? [key, O[key]] : O[key]);\n      }\n    }\n    return result;\n  };\n};\n"],"sourceRoot":""}