{"version":3,"sources":["webpack:///./src/templates/tags.js"],"names":["Tags","pageContext","data","location","tag","allMarkdownRemark","edges","siteTitle","totalCount","site","siteMetadata","title","tagHeader","style","display","flexWrap","justifyContent","listStyle","padding","boxShadow","to","map","node","slug","fields","frontmatter","key","date","role","aria-label","minread","pageQuery"],"mappings":"2FAAA,0HAqDeA,UA9CF,SAAC,GAAqC,IAAnCC,EAAkC,EAAlCA,YAAaC,EAAqB,EAArBA,KAAMC,EAAe,EAAfA,SACzBC,EAAQH,EAARG,IADwC,EAElBF,EAAKG,kBAA3BC,EAFwC,EAExCA,MACFC,GAH0C,EAEjCC,WACGN,EAAKO,KAAKC,aAAaC,OACnCC,EAAS,GAAMR,EAErB,OACE,kBAAC,IAAD,CAAQD,SAAUA,EAAUQ,MAAOJ,GACjC,kBAAC,IAAD,CAAKI,MAAOC,IACZ,kBAAC,IAAD,CAAKT,SAAUA,IAGf,yBACEU,MAAO,CACLC,QAAQ,OACRC,SAAS,OACTC,eAAe,gBACfC,UAAU,OACVC,QAAS,IAEX,kBAAC,OAAD,CAAML,MAAO,CAAEM,UAAU,QAAWC,GAAI,UAAxC,qBAGA,kBAAC,OAAD,CAAMP,MAAO,CAAEM,UAAU,QAAWC,GAAI,kBAAxC,kBAKF,4BAAKR,GACL,4BACGN,EAAMe,KAAI,YAAe,IAAZC,EAAW,EAAXA,KACJC,EAASD,EAAKE,OAAdD,KACAZ,EAAUW,EAAKG,YAAfd,MACR,OACE,wBAAIe,IAAKH,GACP,kBAAC,OAAD,CAAMH,GAAIG,GAAOZ,GACjB,6BACA,+BAAQW,EAAKG,YAAYE,KAAzB,MAAiC,0BAAMC,KAAK,MAAMC,aAAW,UAA5B,KAAjC,IAAgFP,EAAKG,YAAYK,QAAjG,oBAWP,IAAMC,EAAS","file":"component---src-templates-tags-js-494aced4d61631731942.js","sourcesContent":["import React from \"react\"\n\nimport { Link, graphql } from \"gatsby\"\nimport Layout from \"../components/layout\"\nimport SEO from \"../components/seo\"\nimport Bio from \"../components/bio\"\n\nconst Tags = ({ pageContext, data, location }) => {\n  const { tag } = pageContext\n  const { edges, totalCount } = data.allMarkdownRemark\n  const siteTitle = data.site.siteMetadata.title\n  const tagHeader = `${tag}`\n\n  return (\n    <Layout location={location} title={siteTitle}>\n      <SEO title={tagHeader} />\n      <Bio location={location}/>\n\n      {/* links */}\n      <div \n        style={{ \n          display: `flex`,\n          flexWrap: `wrap`,\n          justifyContent: `space-between`,\n          listStyle: `none`,\n          padding: 0,\n        }}>\n        <Link style={{ boxShadow: `none` }} to={'/posts'}>\n         Posts by category\n        </Link>\n        <Link style={{ boxShadow: `none` }} to={'/posts-by-date'}>\n          Posts by date\n        </Link>\n      </div>\n\n      <h3>{tagHeader}</h3>\n      <ul>\n        {edges.map(({ node }) => {\n          const { slug } = node.fields\n          const { title } = node.frontmatter\n          return (\n            <li key={slug}>\n              <Link to={slug}>{title}</Link>\n              <br/>\n              <small>{node.frontmatter.date} • <span role=\"img\" aria-label=\"coffee\">☕</span> {node.frontmatter.minread} min read</small>\n            </li>\n          )\n        })}\n      </ul>\n    </Layout>\n  )\n}\n\nexport default Tags\n\nexport const pageQuery = graphql`\n  query($tag: String) {\n    site {\n      siteMetadata {\n        title\n      }\n    }\n    allMarkdownRemark(\n      limit: 2000\n      sort: { fields: [frontmatter___date], order: DESC }\n      filter: { frontmatter: { tags: { in: [$tag] } } }\n    ) {\n      totalCount\n      edges {\n        node {\n          fields {\n            slug\n          }\n          frontmatter {\n            title\n            minread\n            date(formatString: \"MMMM DD, YYYY\")\n          }\n        }\n      }\n    }\n  }\n`"],"sourceRoot":""}